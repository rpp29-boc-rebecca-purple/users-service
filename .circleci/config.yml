version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  # Also: https://circleci.com/developer/orbs/orb/coveralls/coveralls
  node: circleci/node@4.1
  
jobs:
  run_tests:
    docker:
      - image: cimg/node:15.1
      - image: circleci/postgres:9.6.8-alpine-postgis
        environment:
          POSTGRES_USER: $POSTGRES_USER
          POSTGRES_DB: $POSTGRES_DB
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_HOST: $POSTGRES_HOST
          POSTGRES_PORT: $POSTGRES_PORT

    steps:
      - checkout #alias for git clone\
      - node/install-packages
      # - run:
      #     name: Installing psql client
      #     command: |
      #       sudo apt install postgresql-client
      # - run:
      #     name: Waiting for PostgreSQL to start
      #     command: |
      #       for i in `seq 1 10`;
      #       do
      #         nc -z localhost 5432 && echo Success && exit 0
      #         echo -n .
      #         sleep 2
      #       done
      #       echo Failed waiting for Postgres && exit 1
      # - run:
      #     name: Installing postgres contributions
      #     command: |
      #       sudo apt-get -qq update
      #       sudo apt-get -qq install postgresql-contrib
      # - run:
      #     name: Restarting postgres
      #     command: |
      #       sudo service postgresql restart
      # - run:
      #     name: Install extensions for postgres
      #     command: |
      #       psql -U ? -d ? -h localhost -p 5432 -c "CREATE EXTENSION btree_gist;"
      - run:
          name: Install npm dependencies
          command: |
            npm install --save
      - run:
          name: Run unit tests
          command: |
            NODE_ENV=test && node node_modules/.bin/jest
      - run:
          name: Run e2e tests
          command: |
            NODE_ENV=test && node node_modules/.bin/jest --runInBand --config ./test/jest-e2e.json --watchAll=false --detectOpenHandles
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

workflows:
  build_test:
    jobs:
      - run_tests
